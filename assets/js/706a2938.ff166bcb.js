(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{100:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(8),o=(n(0),n(134)),c={sidebar_position:1,title:"Extract"},l={unversionedId:"examples/extract",id:"examples/extract",isDocsHomePage:!1,title:"Extract",description:"This sample is available in the samples/extract directory",source:"@site/docs/examples/extract.md",sourceDirName:"examples",slug:"/examples/extract",permalink:"/comet-data-pipeline/docs/examples/extract",editUrl:"https://github.com/ebiznext/comet-data-pipeline/edit/master/docs/docs/examples/extract.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Extract"},sidebar:"cometSidebar",previous:{title:"Transform",permalink:"/comet-data-pipeline/docs/howto/transform"},next:{title:"Load",permalink:"/comet-data-pipeline/docs/examples/load"}},i=[{value:"Example 1: Extract all objects from the <code>PUBLIC</code> schema.",id:"example-1-extract-all-objects-from-the-public-schema",children:[]},{value:"Example 2: Extract only the selected tables from the <code>PUBLIC</code>schema and onbly the selected columns from the <code>votes</code> table.",id:"example-2-extract-only-the-selected-tables-from-the-publicschema-and-onbly-the-selected-columns-from-the-votes-table",children:[]}],s={toc:i};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This sample is available in the ",Object(o.b)("inlineCode",{parentName:"p"},"samples/extract")," directory\nFirst you need to set the JDBC connection to the database. Below an example on a H2 database:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-hocon"},'connections {\n  h2-sample-db {\n    format = "jdbc"\n    options {\n      url: "jdbc:h2:file:/my/h2db/path",\n      driver: "org.h2.Driver"\n    }\n  }\n}\n')),Object(o.b)("p",null,"Next create a file describing the schema you want to import. We provide below 2 examples."),Object(o.b)("h3",{id:"example-1-extract-all-objects-from-the-public-schema"},"Example 1: Extract all objects from the ",Object(o.b)("inlineCode",{parentName:"h3"},"PUBLIC")," schema."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},'jdbc-schema:\n  connection: "h2-sample-db" # Connection name as defined in the connections section of the application.conf file\n  schema: "PUBLIC" # Database schema where tables are located\n  tables:\n    - name: "*" # Takes all tables\n  tableTypes: # One or many of the types below\n    - "TABLE"\n    - "VIEW"\n    - "SYSTEM TABLE"\n    - "GLOBAL TEMPORARY"\n    - "LOCAL TEMPORARY"\n    - "ALIAS"\n    - "SYNONYM"\n  templateFile: "domain-template.yml" # Metadata to use for the generated YML file.\n\n')),Object(o.b)("h3",{id:"example-2-extract-only-the-selected-tables-from-the-publicschema-and-onbly-the-selected-columns-from-the-votes-table"},"Example 2: Extract only the selected tables from the ",Object(o.b)("inlineCode",{parentName:"h3"},"PUBLIC"),"schema and onbly the selected columns from the ",Object(o.b)("inlineCode",{parentName:"h3"},"votes")," table."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},'jdbc-schema:\n  connection: "h2-sample-db" # Connection name as defined in the connections section of the application.conf file\n  schema: "PUBLIC" # Database schema where tables are located\n  tables:\n    - name: "speakers"\n    - name: "votes"\n      columns:\n        - speaker_id\n        - id\n        - rating\n  tableTypes: # One or many of the types below\n    - "TABLE"\n  templateFile: "domain-template.yml" # Metadata to use for the generated YML file.\n')),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"templateFile")," section are used to set the default values for the metadata fields in the generated ",Object(o.b)("inlineCode",{parentName:"p"},"load")," file."))}p.isMDXComponent=!0},134:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(n),b=a,u=m["".concat(c,".").concat(b)]||m[b]||d[b]||o;return n?r.a.createElement(u,l(l({ref:t},s),{},{components:n})):r.a.createElement(u,l({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=b;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);