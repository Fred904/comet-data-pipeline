(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{110:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return b})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),i=(a(0),a(132)),l={sidebar_position:14,title:"kafkaload"},o={unversionedId:"cli/kafkaload",id:"cli/kafkaload",isDocsHomePage:!1,title:"kafkaload",description:"Synopsis",source:"@site/docs/cli/kafkaload.md",sourceDirName:"cli",slug:"/cli/kafkaload",permalink:"/comet-data-pipeline/docs/cli/kafkaload",editUrl:"https://github.com/ebiznext/comet-data-pipeline/edit/master/docs/docs/cli/kafkaload.md",version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14,title:"kafkaload"},sidebar:"cometSidebar",previous:{title:"watch",permalink:"/comet-data-pipeline/docs/cli/watch"},next:{title:"yml2xls",permalink:"/comet-data-pipeline/docs/cli/yml2xls"}},b=[{value:"Synopsis",id:"synopsis",children:[]},{value:"Description",id:"description",children:[]},{value:"Parameters",id:"parameters",children:[]}],c={toc:b};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"synopsis"},"Synopsis"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"comet kafkaload ","[options]")),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("h2",{id:"parameters"},"Parameters"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Parameter"),Object(i.b)("th",{parentName:"tr",align:null},"Cardinality"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--topic:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Required")),Object(i.b)("td",{parentName:"tr",align:null},"Topic Name declared in reference.conf file")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--format:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Optional")),Object(i.b)("td",{parentName:"tr",align:null},"Read/Write format eq : parquet, json, csv ... Default to parquet.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--path:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Required")),Object(i.b)("td",{parentName:"tr",align:null},"Source file for load and target file for store")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--mode:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Required")),Object(i.b)("td",{parentName:"tr",align:null},"When offload is true, describes who data should be stored on disk. Ignored if offload is false.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--write-options:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Optional")),Object(i.b)("td",{parentName:"tr",align:null},"Options to pass to Spark Writer")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--transform:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Optional")),Object(i.b)("td",{parentName:"tr",align:null},"Any transformation to apply to message before loading / offloading it")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--offload:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Optional")),Object(i.b)("td",{parentName:"tr",align:null},"If true, kafka topic is offloaded to path, else data contained in path is stored in the kafka topic")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--stream:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Optional")),Object(i.b)("td",{parentName:"tr",align:null},"If true, kafka topic is offloaded to path, else data contained in path is stored in the kafka topic")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--streaming-format:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Required")),Object(i.b)("td",{parentName:"tr",align:null},"If true, kafka topic is offloaded to path, else data contained in path is stored in the kafka topic")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--streaming-output-mode:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Required")),Object(i.b)("td",{parentName:"tr",align:null},"If true, kafka topic is offloaded to path, else data contained in path is stored in the kafka topic")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--streaming-trigger:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Required")),Object(i.b)("td",{parentName:"tr",align:null},"Once / Continuous / ProcessingTime")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--streaming-trigger-option:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Required")),Object(i.b)("td",{parentName:"tr",align:null},"10 seconds for example. see ",Object(i.b)("a",{parentName:"td",href:"https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/streaming/Trigger.html#ProcessingTime-java.lang.String-"},"https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/streaming/Trigger.html#ProcessingTime-java.lang.String-"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--streaming-to-table:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Required")),Object(i.b)("td",{parentName:"tr",align:null},"Table name to sink to")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"--streaming-partition-by:",Object(i.b)("inlineCode",{parentName:"td"},"<value>")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("em",{parentName:"td"},"Required")),Object(i.b)("td",{parentName:"tr",align:null},"List of columns to use for partitioning")))))}p.isMDXComponent=!0},132:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return s}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),d=p(a),u=n,s=d["".concat(l,".").concat(u)]||d[u]||m[u]||i;return a?r.a.createElement(s,o(o({ref:t},c),{},{components:a})):r.a.createElement(s,o({ref:t},c))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var c=2;c<i;c++)l[c]=a[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);